name: "Container Scan - Vision"
on:
  push:
    paths:
      - '/src/vision/**'
  pull_request:
    types: [ opened, reopened, synchronize, ready_for_review ]
    branches: [ main ]
  release:
    types: [ published ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  snyk:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
        working-directory: '/src/vision/'
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: docker build -t slabstech/bhoomi-vision  .
      - name: Run Snyk to check Docker image for vulnerabilities
        # Snyk can be used to break the build when it detects vulnerabilities.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: slabstech/bhoomi-vision
          args: --file=Dockerfile --exclude-base-image-vulns
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif